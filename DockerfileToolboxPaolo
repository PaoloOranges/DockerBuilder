    #
    # Release Version
    #

    FROM mcr.microsoft.com/dotnet/sdk:7.0 as build
    
    WORKDIR /BUILD
    
    COPY Lean Lean
    COPY Lean.Brokerages.CoinbasePro Lean.Brokerages.CoinbasePro
    
    RUN dotnet publish Lean.Brokerages.CoinbasePro/QuantConnect.GDAXBrokerage.ToolBox/QuantConnect.GDAXBrokerage.ToolBox.csproj -c Release -o /output

    FROM mcr.microsoft.com/dotnet/runtime:6.0-bullseye-slim-amd64
    #FROM mcr.microsoft.com/dotnet/runtime:6.0-alpine-amd64
    #FROM mcr.microsoft.com/dotnet/runtime:6.0-bullseye-slim-arm32v7
    #FROM mcr.microsoft.com/dotnet/runtime:6.0-bullseye-slim-arm64v8
    #FROM mcr.microsoft.com/dotnet/runtime:6.0-alpine-arm32v7

    WORKDIR /
        
    ENV DOWNLOADER_PATH=/QuantConnect.GDAXBrokerage.ToolBox
    ENV SCRIPTS_PATH=$DOWNLOADER_PATH/scripts
    ENV SHARED_STORAGE_HOME=/Shared
    ENV ROOT_DIR=/root
    ENV CONFIG_JSON_PATH=$ROOT_DIR/config.json

    ARG TARGETOS
    ARG TARGETARCH
    RUN echo "I'm building for $TARGETOS/$TARGETARCH"


    #Alpine
    # RUN apk update
    # RUN apk add bash
    #Ubuntu/Debian
    RUN apt update
    RUN apt install -y nano

    WORKDIR $DOWNLOADER_PATH    
    COPY --from=build /output .
    
    WORKDIR $DOWNLOADER_PATH/scripts
    ADD DockerBuilders/UtilitiesForDockerImage/DownloadDataUntilNow.sh .
    ADD DockerBuilders/UtilitiesForDockerImage/tickers .

    WORKDIR $ROOT_DIR
    #ADD DockerBuilders/UtilitiesForDockerImage/config.json .
    # create config file dynamically
    RUN echo "{" > $CONFIG_JSON_PATH
    RUN echo "\"data-folder\": \"$SHARED_STORAGE_HOME/Data/\"," >> $CONFIG_JSON_PATH
    RUN echo "\"data-directory\": \"$SHARED_STORAGE_HOME/Data/\"" >> $CONFIG_JSON_PATH
    RUN echo "}" >> $CONFIG_JSON_PATH

    # Set Crontab
    # RUN crontab -l | { cat; echo "59 23 * * * bash $SCRIPTS_PATH/DownloadDataUntilNow.sh -p $DOWNLOADER_PATH -t $SCRIPTS_PATH/tickers -h $SHARED_STORAGE_HOME > $SHARED_STORAGE_HOME/DownloadDataUntilNow.log"; } | crontab -
    # RUN crontab -l | { cat; echo "*/5 * * * * bash $SCRIPTS_PATH/DownloadDataUntilNow.sh -p $DOWNLOADER_PATH -t $SCRIPTS_PATH/tickers -h $SHARED_STORAGE_HOME > $SHARED_STORAGE_HOME/DownloadDataUntilNow.log"; } | crontab -

    ENTRYPOINT ["/bin/bash", "-c", "$SCRIPTS_PATH/DownloadDataUntilNow.sh -p $DOWNLOADER_PATH -t $SCRIPTS_PATH/tickers -h $SHARED_STORAGE_HOME > $SHARED_STORAGE_HOME/DownloadDataUntilNow.log"]
